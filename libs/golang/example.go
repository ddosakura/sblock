package sbgo

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"os"

	"../common"
	"github.com/ddosakura/gklang"
	"github.com/spf13/afero"
)

// Example help user to know how to use the library
func (p *Plugin) Example(f *os.File) {
	raw := `// Example generated by sblock. CAN BE DELETED.

package main

import (
	"log"
	"net/http"

	"../../libs/golang"
	"../sblock"
	"github.com/spf13/afero"
)

func main() {
	fs, err := sbgo.NewFs(sblock.Raw, "default")
	if err != nil {
		log.Fatal(err)
	}

	http.Handle("/public/", http.StripPrefix("/public/", http.FileServer(afero.NewHttpFs(fs))))
	http.ListenAndServe(":8080", nil)
}
`
	var qb bytes.Buffer
	fmt.Fprintf(&qb, raw)

	if err := ioutil.WriteFile(f.Name(), qb.Bytes(), 0644); err != nil {
		gklang.Er(err)
	}
}

// Decode is the func for your project
func (p *Plugin) Decode(raw string) (afero.Fs, error) {
	fn := decodeAlgorithm(p)
	if fn != nil {
		return fn(raw)
	}
	return nil, sbi.ErrUnknowAlgorithm
}
